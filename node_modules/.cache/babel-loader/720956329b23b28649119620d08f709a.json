{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ania\\\\Desktop\\\\www\\\\daily-measure\\\\src\\\\Components\\\\AddMeasure\\\\AddMeasure.js\";\nimport React, { Component } from 'react';\nimport './AddMeasure.css';\nimport Nav from '../Nav/Nav';\nimport { connect } from 'react-redux';\nimport { addMeasure } from '../../Store/Actions/measurementAction';\nimport { auth } from 'firebase';\n\nclass AddMeasure extends Component {\n  constructor(props) {\n    super(props);\n\n    this.increaseValue = event => {\n      const name = event.target.getAttribute('name');\n      this.setState({\n        [name]: this.state[name] + 1\n      });\n    };\n\n    this.decreaseValue = event => {\n      const name = event.target.getAttribute('name');\n      this.setState({\n        [name]: this.state[name] - 1\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.submitMeasure = () => {\n      this.props.addMeasure(this.state);\n      this.props.history.push('/dashboard');\n    };\n\n    this.state = {\n      systolic: 120,\n      diastolic: 80,\n      pulse: 80,\n      description: '',\n      date: new Date().toLocaleString(),\n      uid: ''\n    };\n    this.increaseValue = this.increaseValue.bind(this);\n    this.decreaseValue = this.decreaseValue.bind(this);\n    this.submitMeasure = this.submitMeasure.bind(this);\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.refreshTime(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  refreshTime() {\n    this.setState({\n      date: new Date().toLocaleString()\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"add-measure-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-measure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      name: \"systolic\",\n      onClick: this.increaseValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"keyboard_arrow_up\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.systolic), React.createElement(\"i\", {\n      className: \"material-icons\",\n      name: \"systolic\",\n      onClick: this.decreaseValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"keyboard_arrow_down\"), React.createElement(\"p\", {\n      className: \"name-pressure-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Systolic\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"mmHg\")), React.createElement(\"div\", {\n      className: \"spinner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      name: \"diastolic\",\n      onClick: this.increaseValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"keyboard_arrow_up\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.diastolic), React.createElement(\"i\", {\n      className: \"material-icons\",\n      name: \"diastolic\",\n      onClick: this.decreaseValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"keyboard_arrow_down\"), React.createElement(\"p\", {\n      className: \"name-pressure-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Diastolic\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"mmHg\")), React.createElement(\"div\", {\n      className: \"spinner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      name: \"pulse\",\n      onClick: this.increaseValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"keyboard_arrow_up\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.pulse), React.createElement(\"i\", {\n      className: \"material-icons\",\n      name: \"pulse\",\n      onClick: this.decreaseValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"keyboard_arrow_down\"), React.createElement(\"p\", {\n      className: \"name-pressure-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Pulse\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"bpm\"))), React.createElement(\"input\", {\n      className: \"description-input\",\n      type: \"text\",\n      placeholder: \"Short description..\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"measure-date\",\n      id: \"measureDateContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.date), React.createElement(\"button\", {\n      className: \"app-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons menu-item\",\n      onClick: this.submitMeasure,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"add\"), \"Add\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMeasure: measure => dispatch(addMeasure(measure))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMeasure);","map":{"version":3,"sources":["C:/Users/Ania/Desktop/www/daily-measure/src/Components/AddMeasure/AddMeasure.js"],"names":["React","Component","Nav","connect","addMeasure","auth","AddMeasure","constructor","props","increaseValue","event","name","target","getAttribute","setState","state","decreaseValue","handleChange","description","value","submitMeasure","history","push","systolic","diastolic","pulse","date","Date","toLocaleString","uid","bind","componentDidMount","intervalID","setInterval","refreshTime","componentWillUnmount","clearInterval","render","mapStateToProps","firebase","mapDispatchToProps","dispatch","measure"],"mappings":"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","sourcesContent":["import React, {Component}  from 'react';\r\nimport './AddMeasure.css';\r\nimport Nav from '../Nav/Nav';\r\nimport { connect } from 'react-redux';\r\nimport { addMeasure } from '../../Store/Actions/measurementAction';\r\nimport { auth } from 'firebase';\r\n\r\nclass AddMeasure extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            systolic: 120,\r\n            diastolic: 80,\r\n            pulse: 80,\r\n            description: '',\r\n            date: new Date().toLocaleString(),\r\n            uid:'',\r\n        };\r\n        this.increaseValue = this.increaseValue.bind(this);\r\n        this.decreaseValue = this.decreaseValue.bind(this);\r\n        this.submitMeasure = this.submitMeasure.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.intervalID = setInterval(\r\n            () => this.refreshTime(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    refreshTime() {\r\n        this.setState({\r\n            date: new Date().toLocaleString()\r\n        });\r\n    }\r\n\r\n    increaseValue = (event) => {\r\n        const name = event.target.getAttribute('name');\r\n        this.setState({ [name]: this.state[name] + 1 });\r\n    }\r\n\r\n    decreaseValue = (event) => {\r\n        const name = event.target.getAttribute('name');\r\n        this.setState({ [name]: this.state[name] - 1 });\r\n    }\r\n\r\n    handleChange= (event) => {\r\n        this.setState({\r\n            description: event.target.value,\r\n        })\r\n    }\r\n\r\n    submitMeasure = () => {\r\n        this.props.addMeasure(this.state);\r\n        this.props.history.push('/dashboard');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"add-measure-container\">\r\n                <Nav />\r\n                <div className=\"add-measure\">\r\n\r\n                    <div className=\"spinner-container\">\r\n                        <i className=\"material-icons\" name=\"systolic\" onClick={this.increaseValue}>keyboard_arrow_up</i>\r\n                        <h1>{this.state.systolic}</h1>\r\n                        <i className=\"material-icons\" name=\"systolic\" onClick={this.decreaseValue}>keyboard_arrow_down</i>\r\n                        <p className=\"name-pressure-label\">Systolic</p>\r\n                        <p>mmHg</p>\r\n                    </div>\r\n\r\n                    <div className=\"spinner-container\">\r\n                        <i className=\"material-icons\" name=\"diastolic\" onClick={this.increaseValue}>keyboard_arrow_up</i>\r\n                        <h1>{this.state.diastolic}</h1>\r\n                        <i className=\"material-icons\" name=\"diastolic\" onClick={this.decreaseValue}>keyboard_arrow_down</i>\r\n                        <p className=\"name-pressure-label\">Diastolic</p>\r\n                        <p>mmHg</p>\r\n                    </div>\r\n\r\n                    <div className=\"spinner-container\">\r\n                        <i className=\"material-icons\" name=\"pulse\" onClick={this.increaseValue}>keyboard_arrow_up</i>\r\n                        <h1>{this.state.pulse}</h1>\r\n                        <i className=\"material-icons\" name=\"pulse\" onClick={this.decreaseValue}>keyboard_arrow_down</i>\r\n                        <p className=\"name-pressure-label\">Pulse</p>\r\n                        <p>bpm</p>\r\n                    </div>\r\n\r\n                </div>\r\n                <input className=\"description-input\" type=\"text\" placeholder=\"Short description..\" onChange={this.handleChange}></input>\r\n                <p className=\"measure-date\" id=\"measureDateContainer\">{this.state.date}</p>\r\n                <button className=\"app-btn\"><i className=\"material-icons menu-item\" onClick={this.submitMeasure}>add</i>Add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n    \r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMeasure: (measure) => dispatch(addMeasure(measure))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMeasure)"]},"metadata":{},"sourceType":"module"}